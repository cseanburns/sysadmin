#!/usr/bin/env bash

# Random Number Guessing Game
# by Sean Burns
# Guess a number between 1 and 100
# Date: Tue 04 Dec 2018 
##
# Todo: 
# Generate stats and a plot (gnuplot maybe?)
# that plots the correct number and all guesses

# ``man 5 terminfo`` for setaf values/colors
red=$(tput setaf 1)
green=$(tput setaf 2)
cyan=$(tput setaf 6)
end=$(tput sgr0)

play_game() {
  printf "Do you want to play guess the number? y/n\n"
  read -r decision
  if [ "${decision}" = "n" ] ; then
    printf "%s\n" "${green}Sounds good${end}"
  elif [ "${decision}" != "y" ] ; then
    printf "%s\n" "${red}Must press y.${end}"
    exit 0
  else
    printf "Guess a number between 1 and 100.\n"
  fi
  while [ "${decision}" = "y" ]
  do
    the_game
  done 
}

the_game() {
  declare -i secretnumber=$((1 + RANDOM % 100))
  guessnumber=0
  until [ "${secretnumber}" -eq "${guessnumber}" ]
  do
    printf "Your guess?\n"
    declare -i guessnumber
    read -ra guessnumber
    guess_list+=("${guessnumber[@]}")
    if [ "${guessnumber[-1]}" -gt "${secretnumber}" ] ; then
      printf "%s\n" "${red}Your number is too big. Try again.${end}"
    elif [ "${guessnumber[-1]}" -lt "${secretnumber}" ] ; then
      printf "%s\n" "${green}Your number is too low. Try again.${end}"
    fi
  done
  printf "%s\n" "${cyan}Very good!${end}"
  printf "%s\n"\
    "${cyan}You guessed ${#guess_list[@]} numbers:${end} " \
    "${guess_list[@]}"
  record_scores
  declare -a guess_list=()
  play_again
}

record_scores() {
  {
  echo "DATE $(date)"
  echo "BEGIN"
  for items in "${guess_list[@]}" ; do echo "$items" ; done
  echo "END"
  } >> "$HOME/.guess_history"
}

show_scores() {
  "$PWD"/number-game-stats "$HOME/.guess_history"
}

play_again() {
  echo "Do you want to play again? y/n"
  read -r decision
  if [ "${decision}" = "y" ] ; then
    the_game
  else
    show_scores
  fi
} 

main() {
  clear
  play_game
}

main
