#!/bin/bash
#
# Date: February 1, 2021
# Author: Sean Burns
# Create new shell accounts.
# Generate MySQL source file to create accounts, databases, etc
# Dependencies: diceware. MySQL is not necessary. The script only generates a
# source file for MySQL
# Data source: A single text file containing user account names in one column
#
# Usage: ./makeaccounts group_name
#
# group_name is a name that new accounts will be assigned to

##########################
# Make sure diceware is installed
# Borrowed and modified this from:
#   https://wiki.bash-hackers.org/scripting/style?s[]=functions
##########################
is_installed () {
  if ! hash diceware >/dev/null 2>&1; then
    echo "diceware is not installed. Install and then re-run." >&2
    exit 1
  fi
}


##########################
# Make sure a group name is supplied. Exit if not.
##########################
has_argument () {
  if [[ $# -eq 0 ]] ; then
    echo "Please supply a group name."
    exit 0
  fi
}

##########################
# Make sure account names are all lowercase
##########################
make_names_lower () {
  # new users to add ; one username per line
  declare -r userfile="user_list_file.csv"
  # make sure names are lowercase
  awk -i inplace '{print tolower($0)}' "$user_file" 
}

##########################
# If an account already exists, remove it from the list
##########################
check_duplicate_accounts () {
  # new user accounts
  declare -r userfile="user_list_file.csv"
  # Get list of current accounts
  cut -d: -f1 /etc/passwd >> current_accounts.txt
  # add current accounts to list of new accounts 
  cat current_accounts.txt "$userfile" >> all_accounts.txt
  # sort user names and only print duplicate lines
  sort all_accounts.txt | uniq -d >> duplicates.txt
  # New accounts to add
  cat duplicates.txt "$userfile" | sort | uniq -u >> users_to_add.txt
  # remove uneeded files
  rm current_accounts.txt all_accounts.txt duplicates.txt
}

##########################
# Create the new shell accounts and assign them to a group
# Arguments:
#   group_name
##########################
new_shell_accounts () {
  # new user accounts
  declare -r user_file="users_to_add.txt"
  # Add users to specific group to allow SSH access for the group
  group_name="$1"
  if ! grep -qs "$group_name" /etc/group ; then
    printf "Group %s did not exist.\n" "$group_name"
    printf "Creating %s.\n" "$group_name"
    groupadd "$group_name"
  fi
  # Create new user accounts
  while read -r name ; do
    useradd -m -U -s /bin/bash -G "$group_name" "$name"
  done<"$user_file"
  # Lock .bash_history files
  chattr +a /home/*/.bash_history
  # Get total count of users. Assign number to variable
  # use redirect with 'wc' to just get the count/number
  total_users=$(wc -l < "$user_file")
  declare -i "$total_users"
  # Create passwords for users
  for i in $(seq 1 "$total_users") ; do
    diceware -s 1 -d "-" -n 3 >> userpw
  done
  # Join usernames to temporary passwords
  paste -d ":" "$user_file" userpw > pwuser
  chmod 600 pwuser
  # Update passwords for the users
  chpasswd < pwuser
}

##########################
# Create MySQL statements to create MySQL accounts for same users
##########################
create_sql_accounts () {
  # list of users
  declare -r user_file="users_to_add.txt"
  # get user count
  total_users=$(wc -l < "$user_file")
  # generate passwords
  for i in $(seq 1 "$total_users") ; do
    diceware -s 1 -d "-" -n 3 "$i" >> userpw
  done
  # surround passwords with single quotes and end with semi colon 
  sed -i "s/^/'/" userpw
  sed -i "s/$/';/" userpw
  # create mysql user create statements
  while read -r name ; do
    echo "create user '$name'@'localhost' identified by "
  done<"$user_file" >> temp.sql
  # add passwords to end of line
  paste temp.sql userpw >> accounts.sql
  rm temp.sql
}

##########################
# Create databases for users; since this is for a specific course (ict301),
# then append that to each database name
##########################
create_databases () {
  # list of users
  declare -r user_file="users_to_add.txt"
  # create mysql create database  statements
  while read -r name ; do
    echo "create database $name-ict301;"
  done<"$user_file" >> accounts.sql
}

##########################
# Grant users all privileges on their own databases
##########################
make_user_privileges () {
  # list of users
  user_file="users_to_add.txt"
  # create mysql create database  statements
  while read -r name ; do
    echo "grant all privileges on $name-ict301.* to '$name'@'localhost';"
  done<"$user_file" >> accounts.sql
}

##########################
# Grant users only select privileges on class-wide database
##########################
make_class_privileges () {
  # list of users
  user_file="users_to_add.txt"
  # create mysql create database  statements
  while read -r name ; do
    echo "grant select on ict301.* to '$name'@'localhost';"
  done<"$user_file" >> accounts.sql
  echo "Login to MySQL as root and run ``source accounts.sql``"
}

main ()  {
  is_installed
  has_argument
  make_names_lower
  check_duplicate_accounts
  new_shell_accounts "$@"
  create_sql_accounts
  create_databases
  make_privileges
  make_class_privileges
}

main "$@"
