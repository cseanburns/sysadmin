" Vim config

set nocompatible
filetype off
" Set mapleader to comma
let mapleader=","
" hide mode
set nomodeline

" reload .vimrc
noremap <silent> <F5> :source ~/.vimrc

" do a word count
noremap <silent> <F7> g<C-G>

" Load plugins using vim-plug
" https://github.com/junegunn/vim-plug
call plug#begin('~/.vim/plugged')

" For R integration
Plug 'jalvesaq/Nvim-R'
Plug 'gaalcaras/ncm-R'

" For writing
" Center writing screen
Plug 'junegunn/goyo.vim'        
Plug 'preservim/vim-pencil'
Plug 'preservim/vim-wordy'
Plug 'godlygeek/tabular'
Plug 'Ron89/thesaurus_query.vim' 

" Zotero integration
Plug 'jalvesaq/zotcite'         

" Notes etc
Plug 'vimwiki/vimwiki'

" Initialize plugin system
call plug#end()

" UI
syntax off
"colorscheme maroloccio
"colorscheme torte

" Set the color of the tilde and other non text characters
" setting here to NONE so that it reflects the terminal color settings
highlight NonText ctermfg=NONE
highlight LineNr ctermfg=NONE ctermfg=Cyan
highlight Cursor ctermfg=NONE ctermfg=Cyan
highlight MatchParen ctermfg=NONE ctermfg=Cyan

" The following three lines set the highlight for set spell:
hi clear SpellBad
hi SpellCap cterm=underline,bold ctermfg=Cyan ctermbg=Black
hi SpellBad cterm=underline,bold ctermfg=Cyan ctermbg=Black
hi SpellLocal cterm=underline,bold ctermfg=Cyan ctermbg=Black
hi SpellRare cterm=underline,bold ctermfg=Cyan ctermbg=Black

" Tab completion
set wildmenu
set wildmode=list:longest,full

" Make backpace modern 
set backspace=indent,eol,start

" Search configurations
set ignorecase
set smartcase
set incsearch
set showmatch
set magic
set hlsearch
" remove highlights with spacebar
:noremap <silent> <Space> :silent noh<Bar>echo<CR>
" change highlight for searched terms
hi Search cterm=underline,bold ctermfg=Cyan ctermbg=Black

set lazyredraw
set noerrorbells visualbell t_vb=           " Disable annoying error noises
set number                                  " set line numbers
set shortmess+=I                            " disable startup message
set splitbelow                              " open new vertical splits bottom
set splitright                              " open new horizontal splits right
set textwidth=79
set autoindent
set nofoldenable                            " disable automatic folding

set expandtab
set smarttab
set tabstop=2
set shiftwidth=2 softtabstop=2

set nojoinspaces

" show command in bottom bar
set showcmd

" open help in new tab instead of in current buffer
cabbrev help tab help

"set relativenumber                         " set relative numbering
"set scrolloff=12                           " Keep cursor near middle of screen
"set cursorline                             " highlight cursor line

" Text 
set encoding=utf-8                          " set encoding to utf-8
set nospell                                 " disable automatic spellcheck 
setlocal spelllang=en_us                    " set spellcheck language
set spellfile=~/.vim/spellfile.add          " add custom spellings here
set thesaurus+=/home/sean/.vim/thesaurii.txt " local thesaurus

" File management
set backup
set backupdir=~/.backup
set directory=~/.backup

" Tabbed Vim
noremap <leader>tt :tabnew<cr>
noremap <leader>tc :tabclose<cr>
noremap <leader>tm :tabmove
noremap <leader>tn :tabnext<cr>
noremap <leader>tp :tabprevious<cr>

" Split vertical if horizontal
noremap <C-l> <C-W>L
" Split horizontal if vertical
noremap <C-j> <C-W>J
" Rotate splits
noremap <C-t> <C-w><C-r>

" Move to other pane
nnoremap <C-d> <C-W>w
nnoremap <C-j> <C-W><C-j> " down
nnoremap <C-k> <C-W><C-k> " up
nnoremap <C-l> <C-W><C-l> " right
nnoremap <C-h> <C-W><C-h> " left

" Omnicompletion (e.g., ZotCite)
filetype plugin on
set omnifunc=syntaxcomplete#Complete

" ZotCite
let $ZCitationTemplate = '{author}{year}'

" R integration
let Rnvimpager="vertical"
let R_editor_w=80
let R_objbr_place = "RIGHT"

" For Pencil Plugin
let g:pencil#wrapModeDefault = 'soft'   " default is 'hard'
augroup pencil
  autocmd!
  "autocmd FileType md,markdown,mkd call pencil#init()
  autocmd FileType xml,html        call pencil#init()
  autocmd BufNewFile,BufRead /var/tmp/mutt* call pencil#init()
  autocmd BufNewFile,BufRead todo.txt call pencil#init()
  autocmd FileType text            call pencil#init({'wrap': 'hard'})
augroup END

" Activate Goyo and Pencil with F12
noremap <F12> :Goyo <bar> :TogglePencil <CR>
" Goyo configurations
let g:goyo_width = 100

" Use % to jump to matches
" documentation: https://github.com/chrisbra/matchit/blob/master/doc/matchit.txt
packadd! matchit

" netrw
let g:netrw_liststyle = 3 " tree listing (pree i to switch modes)
let g:netrw_altv = 1 " opens directory vertically and narrow 
let g:netrw_winsize = 30 " controls size of netwr window

"ab alise Association for Library and Information Science Education
"ab asist Association of Information Science & Technology
"ab uk University of Kentucky
"ab cci College of Communication and Information
"ab sis School of Information Science
ab javascript JavaScript
"ab cp <code><pre>
"ab cpp </pre></code>
"ab ul <ul>
"ab ull </ul>
"ab li <li>
"ab lii </li>
"ab lt &lt;
"ab gt &gt;
