" Vim config

set nocompatible
filetype off
let mapleader=","                           " set mapleader to comma
set nomodeline                              " hide mode

" reload .vimrc
noremap <silent> <F5> :source ~/.vimrc

" do a word count
noremap <silent> <F7> g<C-G>

" ===== BEGIN VUNDLE SETUP =====

" Guide: https://tinyurl.com/mwm8dsp
" Vundle package can be found on Github
" For GitHub repos, specify plugins using the 'user/repository' format

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Plugin 'gmarik/vundle'

" For CSS
Plugin 'ap/vim-css-color'

" For R integration
Plugin 'jalvesaq/Nvim-R'
Plugin 'gaalcaras/ncm-R'

" For Git
Plugin 'airblade/vim-gitgutter'
set updatetime=100

" For time management
Plugin 'aserebryakov/vim-todo-lists'

" For writing
Plugin 'junegunn/goyo.vim'        " center writing screen
Plugin 'junegunn/limelight.vim'   " highlights line
Plugin 'reedes/vim-pencil'
Plugin 'reedes/vim-wordy'
Plugin 'godlygeek/tabular'
Plugin 'Ron89/thesaurus_query.vim' 
Plugin 'dpelle/vim-LanguageTool'  " Grammar checker
Plugin 'jalvesaq/zotcite'         " Zotero integration
Plugin 'junegunn/vim-easy-align'  " Prettify markdown tables
Plugin 'ap/vim-buftabline'

" Colorschemes
Plugin 'franbach/miramare'
"colorscheme miramare

" Now we can turn our filetype functionality back on
filetype plugin indent on
set omnifunc=syntaxcomplete#Complete

" ===== END VUNDLE SETUP =====

" UI
syntax on
set background=dark " set to dark for most other colorschemes
set t_Co=256
set path+=**
set wildmenu
set wildmode=list:longest,full
set backspace=indent,eol,start
set ignorecase
set smartcase
set hlsearch
" remove highlights with spacebar
:noremap <silent> <Space> :silent noh<Bar>echo<CR>
set incsearch
set lazyredraw
set magic
set showmatch                               " highlight matching [{()}]
set noerrorbells visualbell t_vb=           " Disable annoying error noises
set number                                  " set line numbers
"set relativenumber                          " set relative numbering
set shortmess+=I                            " disable startup message
set splitbelow                              " open new vertical splits bottom
set splitright                              " open new horizontal splits right
set scrolloff=12                            " Keep cursor near middle of screen
set textwidth=80
set autoindent
set expandtab
set smarttab
set tabstop=2
set shiftwidth=2 softtabstop=2
set nojoinspaces
set showcmd                                 " show command in bottom bar
"set cursorline                              " highlight cursor line
let g:limelight_conceal_ctermfg = 'gray'    " to fix colorscheme
autocmd! User GoyoEnter Limelight
autocmd! User GoyoLeave Limelight!
autocmd! User GoyoEnter set nocursorline    " disable cursorline in Goyo

" Text 
set encoding=utf-8                          " set encoding to utf-8
set nospell                                 " disable automatic spellcheck 
setlocal spelllang=en_us                    " set spellcheck language
set spellfile=~/.vim/spellfile.add          " add custom spellings here
set thesaurus+=/home/sean/.vim/thesaurii.txt " local thesaurus

" File management
set backup
set backupdir=~/.backup
set directory=~/.backup

" Tabbed Vim
noremap <leader>tt :tabnew<cr>
noremap <leader>tc :tabclose<cr>
noremap <leader>tm :tabmove
noremap <leader>tn :tabnext<cr>
noremap <leader>tp :tabprevious<cr>

" Split vertical if horizontal
noremap <C-l> <C-W>L
" Split horizontal if vertical
noremap <C-j> <C-W>J
" Rotate splits
noremap <C-t> <C-w><C-r>

" Move to other pane
nnoremap <C-d> <C-W>w

" R integration
let Rnvimpager="vertical"
let R_editor_w=80

" For Pencil Plugin
let g:pencil#wrapModeDefault = 'soft'   " default is 'hard'

augroup pencil
  autocmd!
  autocmd FileType md,markdown,mkd call pencil#init()
  autocmd FileType xml,html        call pencil#init()
  autocmd BufNewFile,BufRead /var/tmp/mutt* call pencil#init()
  autocmd FileType text            call pencil#init({'wrap': 'hard'})
augroup END

" Activate Goyo and Pencil with F12
noremap <F12> :Goyo <bar> :TogglePencil <CR>

" LanguageTool setup
let g:languagetool_jar='$HOME/bin/LanguageTool-5.1/languagetool-commandline.jar'
let g:languagetool_lang='en-US'

" vim-easy-align plugin to prettify markdown tables
" align github-flavored markdown tables
" start interactive EasyAlign in visual mode (e.g., vipga)
" see https://github.com/junegunn/vim-easy-align/blob/master/EXAMPLES.md
" To align a markdown table, press:
" vipga *|
xmap ga <Plug>(EasyAlign)
" Start interactive EasyAlign for a motion/text object (e.g., gaip)
nmap ga <Plug>(EasyAlign)

" For buftabline plugin (Buffer management)
set hidden
nnoremap <C-N> :bnext<CR>
nnoremap <C-P> :bprev<CR>

